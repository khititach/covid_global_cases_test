[{"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\reportWebVitals.js":"1","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\App.js":"2","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\index.js":"3","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidGlobalCases.js":"4","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidtest.js":"5","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidglobalcasesv2.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":273,"mtime":1606494584278,"results":"9","hashOfConfig":"8"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":8547,"mtime":1606487248643,"results":"11","hashOfConfig":"8"},{"size":4617,"mtime":1606327463368,"results":"12","hashOfConfig":"8"},{"size":4921,"mtime":1606552815307,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lotf5e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\reportWebVitals.js",[],["32","33"],"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\App.js",["34","35"],"import './App.css';\nimport Covidglobal from './component/covidGlobalCases'\nimport Covidglobalv2 from './component/covidglobalcasesv2'\nimport Charts from './component/covidtest'\n\nfunction App() {\n  return (\n    <>\n      <Covidglobalv2 />\n    </>\n  );\n}\n\nexport default App;\n",["36","37"],"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\index.js",[],["38","39"],"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidGlobalCases.js",["40","41","42","43","44","45","46"],"/* eslint-disable no-template-curly-in-string */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React , {useState , useEffect} from 'react'\r\nimport './style.scss'\r\n\r\nfunction RandomNumber () {\r\n    return Math.floor(Math.random() * 100); \r\n}\r\n\r\n\r\nconst num_test = [ \r\n    { \r\n        \"Country\":'1',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'2',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'3',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'4',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'5',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'6',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'7',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'8',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'9',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n    { \r\n        \"Country\":'10',\r\n        \"num\": RandomNumber(),\r\n        'timeline':{}\r\n    },\r\n       \r\n]\r\n\r\n  \r\nfunction SomeLoadingScreen () {\r\n    return (\r\n        <div>\r\n            Loading Data\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CovidGlobalCases () {\r\n        \r\n        // loading data\r\n    const [loading, setLoading] = useState(true)\r\n\r\n        // date 1 month\r\n    const [Date , setDate] = useState([])\r\n        // data country > Country Name , date , cases 1 month\r\n    const [Data , setData] = useState([])\r\n        // country Position \r\n    const [CountryPosition , setCountryPosition] = useState([])\r\n        // most case\r\n    const [mostCase , setmostCase] = useState([])\r\n        // bar color\r\n    const [barColor, setbarColor] = useState([])\r\n\r\n        // test num\r\n    const [numTest, setnumTest] = useState(num_test)\r\n\r\n        // url get country \r\n    const urlGetCountry = 'https://disease.sh/v3/covid-19/countries?yesterday=false&twoDaysAgo=false&allowNull=false'\r\n        // url get specify > https://disease.sh/v3/covid-19/historical/[country]?lastdays=30\r\n    const urlusa = 'https://disease.sh/v3/covid-19/historical/usa?lastdays=30'\r\n        // url get total cases\r\n    const urlTotalCases = 'https://disease.sh/v3/covid-19/historical/all?lastdays=30';\r\n\r\n    useEffect(async() => {\r\n        const CountryName = [];\r\n        const barColorArr = [];\r\n        // const mostCases = [];\r\n\r\n            // get name country\r\n        await fetch(urlGetCountry)\r\n        .then(res => res.json())\r\n        .then(DataCountry => {\r\n            DataCountry.forEach((data , index) => {\r\n                // console.log(data);\r\n                CountryName.push(data.country)\r\n\r\n                // random color\r\n                let color = '#'+(0x1000000+(Math.random())*0xffffff).toString(16).substr(1,6)\r\n                barColorArr.push(color)\r\n            });\r\n            // console.log(CountryName);\r\n\r\n                // get data specify country\r\n            fetch('https://disease.sh/v3/covid-19/historical/'+CountryName+'?lastdays=30')\r\n            .then(res => res.json())\r\n            .then(async res => {\r\n                // console.log(res);\r\n\r\n                    // delete country empty data\r\n                const DataProcess = res.filter(country => country.country)\r\n                    // get date\r\n                const getDate = Object.keys(DataProcess[0].timeline.cases);\r\n                setDate(getDate)\r\n\r\n                    // set Data\r\n                setData(DataProcess)\r\n                // console.log(Data);\r\n                    // set color\r\n                setbarColor(barColorArr)\r\n\r\n                    // view data\r\n                // console.log('Date : ',Date);\r\n                // console.log('Data : ',Data);\r\n                // console.log('barColor : ',barColor);\r\n\r\n                    // process most cases per day\r\n                const mostCasesArr = [];     \r\n                const positionCountryArr = [];\r\n             \r\n                Date.forEach((dayitem , dayindex ,array ) => {\r\n                    const casesmax = Math.max(...Data.map(item => item.timeline.cases[dayitem]))\r\n                    mostCasesArr.push(casesmax)\r\n\r\n                        // position \r\n                        // console.log(array.length);\r\n                    \r\n                })\r\n            \r\n                setmostCase(mostCasesArr)\r\n               \r\n                \r\n               \r\n                \r\n                setLoading(false)\r\n                // console.log(loading);\r\n                // if (Date.length === 30) {\r\n                //     setLoading(false)\r\n                // } \r\n                \r\n             \r\n            })\r\n            .catch(err => console.log(err))\r\n            \r\n        })\r\n        .catch(err => console.log(err))\r\n\r\n\r\n    },[])\r\n\r\n    // useEffect(() => {\r\n    //     if (mostCase.length !== 0) {\r\n    //         setLoading(false)\r\n    //     }\r\n    // })\r\n\r\n\r\n        // count day\r\n    const [countday , setcountday] = useState(0)\r\n    useEffect(() => {\r\n        if (countday >= 29 ) {\r\n            setTimeout(()=>{\r\n                setcountday(0)\r\n            },3000)\r\n        } else {\r\n            setTimeout(()=>{\r\n                setcountday(countday + 1 )\r\n            },1000)\r\n        }\r\n    })\r\n\r\n    if (loading) { return <SomeLoadingScreen />} else {\r\n        return (\r\n            <div className=\"header\">\r\n                    {/* Header title */}\r\n                <div className=\"header-title\">\r\n                    <span>COVID GLOBAL CASES</span>\r\n                </div>\r\n                    {/* count day */}\r\n                <div className=\"count-day\">\r\n                    <span>Day : {Date[countday]} </span>\r\n                </div>\r\n\r\n                <div className=\"test-data\">\r\n                    {/* <span>Total cases : {TotalCases.cases['11/3/20']}</span> */}\r\n                </div>\r\n\r\n                    {/* chart bar */}\r\n                <div className=\"chart-body\">\r\n                    <div className=\"chart-text\">\r\n                        \r\n                            {Data.map((item ,index) => {\r\n                                let cases = item.timeline.cases[Date[countday]];\r\n                                // console.log(mostCase[0][Date[countday]]);\r\n                                const barWidth = parseInt((cases/mostCase[countday])*100)+'%'\r\n                                // console.log(barWidth);\r\n                                const topPosition = ''+ index * 60  + 'px'\r\n\r\n                                const randColor = barColor[index]\r\n                                \r\n                                return(\r\n                                    <div key={index} className=\"country-bar\" style={{top:topPosition, transition:'all 0.3s'}}>\r\n                                        <div className=\"bg-bar\" style={{'backgroundColor':randColor,width:barWidth, transition:'all 0.3s'}}></div>\r\n                                        <span className=\"country-text\">{item.country} (cases : {cases})  </span>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n\r\n                            {/* <div className=\"country-bar\" style={{top:'50px'}}>\r\n                                    <div className=\"bg-bar\" style={{backgroundColor:'red',width:'100%', transition:'all 0.3s'}}></div>\r\n                                    <span className=\"country-text\">Country_1 cases :95</span>\r\n                                </div>\r\n                                <div className=\"country-bar\" style={{top:'100px'}}>\r\n                                    <div className=\"bg-bar\" style={{backgroundColor:'red',width:'70%', transition:'all 0.3s'}}></div>\r\n                                    <span className=\"country-text\">Country_2 cases :80</span>\r\n                                </div>\r\n                                <div className=\"country-bar\" style={{top:'150px'}}>\r\n                                    <div className=\"bg-bar\" style={{backgroundColor:'red',width:'70%', transition:'all 0.3s'}}></div>\r\n                                    <span className=\"country-text\">Country_2 cases :80</span>\r\n                                </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    \r\n}\r\n\r\nexport default CovidGlobalCases;","D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidtest.js",[],["47","48"],"D:\\Work\\project\\Job Test\\Synergy global network\\covid_cases_test\\src\\component\\covidglobalcasesv2.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"58","line":4,"column":8,"nodeType":"56","messageId":"57","endLine":4,"endColumn":14},{"ruleId":"50","replacedBy":"59"},{"ruleId":"52","replacedBy":"60"},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},{"ruleId":"54","severity":1,"message":"63","line":85,"column":12,"nodeType":"56","messageId":"57","endLine":85,"endColumn":27},{"ruleId":"54","severity":1,"message":"64","line":85,"column":30,"nodeType":"56","messageId":"57","endLine":85,"endColumn":48},{"ruleId":"54","severity":1,"message":"65","line":92,"column":12,"nodeType":"56","messageId":"57","endLine":92,"endColumn":19},{"ruleId":"54","severity":1,"message":"66","line":92,"column":21,"nodeType":"56","messageId":"57","endLine":92,"endColumn":31},{"ruleId":"54","severity":1,"message":"67","line":97,"column":11,"nodeType":"56","messageId":"57","endLine":97,"endColumn":17},{"ruleId":"54","severity":1,"message":"68","line":99,"column":11,"nodeType":"56","messageId":"57","endLine":99,"endColumn":24},{"ruleId":"54","severity":1,"message":"69","line":145,"column":23,"nodeType":"56","messageId":"57","endLine":145,"endColumn":41},{"ruleId":"50","replacedBy":"70"},{"ruleId":"52","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":29,"column":40,"nodeType":"74","messageId":"75","endLine":29,"endColumn":42},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Covidglobal' is defined but never used.","Identifier","unusedVar","'Charts' is defined but never used.",["76"],["77"],["76"],["77"],"'CountryPosition' is assigned a value but never used.","'setCountryPosition' is assigned a value but never used.","'numTest' is assigned a value but never used.","'setnumTest' is assigned a value but never used.","'urlusa' is assigned a value but never used.","'urlTotalCases' is assigned a value but never used.","'positionCountryArr' is assigned a value but never used.",["76"],["77"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]